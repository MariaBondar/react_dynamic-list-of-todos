{"version":3,"sources":["components/TodoList/TodoList.tsx","styles/api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedUserId","useState","query","setQuery","completed","setCompleted","filterd","filter","todo","title","toLowerCase","startsWith","trim","className","action","type","value","onChange","event","target","map","defaultChecked","disabled","userId","onClick","id","API_URL","getUsers","a","fetch","response","json","getAll","CurrentUser","clearUser","isError","setError","currentUser","setUser","getUser","getedUser","useEffect","username","name","email","phone","App","selectedUserId","setTodos","getData","useCallback","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50d26b25.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './TodoList.scss';\nimport { ToDo } from '../../types/types';\n\ntype Props = {\n  todos: ToDo[],\n  setSelectedUserId: (arg0: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, setSelectedUserId }) => {\n  const [query, setQuery] = useState('');\n  const [completed, setCompleted] = useState('');\n\n  const isFiltered = () => {\n    if (completed === 'Active') {\n      return todos.filter(todo => (\n        todo.title.toLowerCase().startsWith(query.trim().toLowerCase())\n        && todo.completed === false\n      ));\n    }\n\n    if (completed === 'Completed') {\n      return todos.filter(todo => (\n        todo.title.toLowerCase().startsWith(query.trim().toLowerCase())\n        && todo.completed === true\n      ));\n    }\n\n    return todos.filter(todo => (\n      todo.title.toLowerCase().startsWith(query.trim().toLowerCase())\n    ));\n  };\n\n  const filterd = isFiltered();\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <form action=\"\">\n          <input\n            type=\"text\"\n            data-cy=\"filterByTitle\"\n            value={query}\n            onChange={(event) => {\n              setQuery(event.target.value);\n            }}\n          />\n          <select\n            onChange={(event) => {\n              setCompleted(event.target.value);\n            }}\n          >\n            <option value=\"All\">All</option>\n            <option value=\"Active\">Active</option>\n            <option value=\"Completed\">Completed</option>\n          </select>\n        </form>\n        <ul\n          className=\"TodoList__list\"\n          data-cy=\"listOfTodos\"\n        >\n          {\n            filterd.map(todo => (\n              <li className={`TodoList__item TodoList__item--${todo.completed}`} key={todo.id}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    defaultChecked={todo.completed}\n                    disabled\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                {todo.userId\n                  && (\n                    <button\n                      data-cy=\"userButton\"\n                      className=\"\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    \"\n                      type=\"button\"\n                      onClick={() => setSelectedUserId(todo.userId)}\n                    >\n                      {`User#${todo.userId}`}\n                    </button>\n                  )}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api';\n\nexport const getUsers = async (id: number) => {\n  const response = await fetch(`${API_URL}/users/${id}`);\n\n  return response.json();\n};\n\nexport const getAll = async () => {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport './CurrentUser.scss';\nimport { getUsers } from '../../styles/api/api';\nimport { User } from '../../types/types';\n\ntype Props = {\n  userId: number,\n  clearUser: () => void\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId, clearUser }) => {\n  const [isError, setError] = useState(false);\n  const [currentUser, setUser] = useState<User | null>(null);\n\n  const getUser = async () => {\n    try {\n      const getedUser = await getUsers(userId);\n\n      setError(false);\n      setUser(getedUser);\n    } catch {\n      setError(true);\n      setUser(null);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  }, [userId]);\n\n  return (\n    <>\n      { currentUser && (\n        <div className=\"CurrentUser\" key={currentUser.id}>\n          <h2 className=\"CurrentUser__title\">\n            <span>{`Selected user: ${currentUser.username}`}</span>\n          </h2>\n          <h3\n            className=\"CurrentUser__name\"\n            data-cy=\"userName\"\n          >\n            {currentUser.name}\n          </h3>\n          <p className=\"CurrentUser__email\">{currentUser.email}</p>\n          <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n          <button\n            type=\"button\"\n            onClick={clearUser}\n          >\n            Clear\n          </button>\n        </div>\n      )}\n      { isError && (\n        <p>Error</p>\n      )}\n\n    </>\n  );\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { ToDo } from './types/types';\nimport { getAll } from './styles/api/api';\n\nconst App: React.FC = () => {\n  const [\n    selectedUserId,\n    setSelectedUserId,\n  ] = useState(0);\n\n  const [todos, setTodos] = useState<ToDo[]>([]);\n\n  const getData = useCallback(async () => {\n    const res = await getAll();\n\n    setTodos(res);\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const clearUser = () => {\n    setSelectedUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          setSelectedUserId={setSelectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              clearUser={clearUser}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}